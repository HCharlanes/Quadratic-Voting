"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Election = (function (_Pudding) {
    _inherits(Election, _Pudding);

    function Election() {
      _classCallCheck(this, Election);

      _get(Object.getPrototypeOf(Election.prototype), "constructor", this).apply(this, arguments);
    }

    return Election;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Election.abi = [{ "constant": true, "inputs": [], "name": "startDate", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "organization", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [], "name": "runForElection", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "description", "outputs": [{ "name": "", "type": "string" }], "type": "function" }, { "constant": false, "inputs": [], "name": "checkWinner", "outputs": [{ "name": "winProp", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "candidate", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [], "name": "endDate", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "candidateProposals", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [], "name": "positionName", "outputs": [{ "name": "", "type": "string" }], "type": "function" }, { "inputs": [{ "name": "org", "type": "address" }, { "name": "pos", "type": "string" }, { "name": "desc", "type": "string" }, { "name": "start", "type": "uint256" }, { "name": "end", "type": "uint256" }], "type": "constructor" }];
  Election.binary = "606060405260405161085b38038061085b83398101604052805160805160a05160c05160e05193949283019391909201919084600160a060020a03166361203265604051817c01000000000000000000000000000000000000000000000000000000000281526004018090506020604051808303816000876161da5a03f1156100025750506040515133600160a060020a03908116911614159050806100a457508082115b806100ae57504282115b156100b857610002565b60008054600160a060020a0319168617815584516001805492819052916020600282851615610100026000190190921691909104601f9081018290047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6908101939290919089019083901061015057805160ff19168380011785555b506101809291505b808211156101d9576000815560010161013c565b82800160010185558215610134579182015b82811115610134578251826000505591602001919060010190610162565b50508260026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101dd57805160ff19168380011785555b5061020d92915061013c565b5090565b828001600101855582156101cd579182015b828111156101cd5782518260005055916020019190600101906101ef565b505060039190915560045550610630915081905061022b6000396000f3606060405236156100775760e060020a60003504630b97bc86811461007957806323bd4d7a146100825780636949b51d146100945780637284e41614610126578063ad38867e14610180578063bf4c988e1461024a578063c24a0f8b14610265578063c2c3e0a61461026e578063d78ad577146102a2575b005b6102fc60035481565b610306600054600160a060020a031681565b610077600080547f08ae4b0c00000000000000000000000000000000000000000000000000000000606090815233600160a060020a03908116606452839283929116906308ae4b0c9060849060209060248187876161da5a03f115610002575050604051511590508061011c575033600160a060020a031681526005602052604081205460ff165b156103c457610002565b61032360028054602060018216156101000260001901909116829004601f810182900490910260809081016040526060828152929190828280156103bc5780601f10610391576101008083540402835291602001916103bc565b6103066000808080806006548110156102435760068054829081101561000257526000805160206106108339815191528150547f2b57f777000000000000000000000000000000000000000000000000000000006060908152600160a060020a039190911690632b57f7779060649060209060048187876161da5a03f115610002575050604051519250508082111561023f5760068054929485938110156100025750905260008051602061061083398151915254600160a060020a03165b8094505b5050505090565b6102fc60043560056020526000908152604090205460ff1681565b6102fc60045481565b61030660043560068054829081101561000257506000526000805160206106108339815191520154600160a060020a031681565b6103236001805460806020601f6002600019610100868816150201909416939093049283018190040281016040526060828152929190828280156103bc5780601f10610391576101008083540402835291602001916103bc565b6060908152602090f35b60408051600160a060020a03929092168252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b505050505081565b6040805133600160a060020a0390811684526005602052918320805460ff191660019081179091558354600354600480547f22e5c94f0000000000000000000000000000000000000000000000000000000086526044860183905260648601819052608091860191825284546002818716156101000260001901909116046084870181905294995089985092909516946322e5c94f948894859492918291602482019160a40190879080156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b50508381038252868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156105585780601f1061051257610100808354040283529160200191610558565b908c528101907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6905b81548152906001019060200180831161053b57829003601f168201915b505096505050505050506020604051808303816000876161da5a03f11561000257505060405151600680548086018083559294509092509082818380158290116105ce5760008390526105ce906000805160206106108339815191529081019083015b8082111561060c576000815589016105bb565b50505060009290925260008051602061061083398151915201805473ffffffffffffffffffffffffffffffffffffffff191692909217909155505050565b509056f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f";

  if ("" != "") {
    Election.address = "";

    // Backward compatibility; Deprecated.
    Election.deployed_address = "";
  }

  Election.generated_with = "1.0.2";
  Election.contract_name = "Election";

  return Election;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Election = factory;
}