"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var OrganizationsFactory = (function (_Pudding) {
    _inherits(OrganizationsFactory, _Pudding);

    function OrganizationsFactory() {
      _classCallCheck(this, OrganizationsFactory);

      _get(Object.getPrototypeOf(OrganizationsFactory.prototype), "constructor", this).apply(this, arguments);
    }

    return OrganizationsFactory;
  })(Pudding);

  ;

  // Set up specific data for this class.
  OrganizationsFactory.abi = [{ "constant": true, "inputs": [], "name": "factoryManager", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [], "name": "destroy", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "addrOrganization", "type": "address" }], "name": "DeleteOrganization", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "name", "type": "bytes32" }, { "name": "basetokens", "type": "uint256" }, { "name": "minNotice", "type": "uint256" }], "name": "NewOrganization", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "organizations", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [], "name": "numOrganizations", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "organizationID", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "inputs": [], "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_new", "type": "address" }], "name": "NewMember", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_old", "type": "address" }], "name": "DeletedMember", "type": "event" }];
  OrganizationsFactory.binary = "";

  if ("0xb6fdb9d326e8d9ef31457046b58637273ebdc683" != "") {
    OrganizationsFactory.address = "0xb6fdb9d326e8d9ef31457046b58637273ebdc683";

    // Backward compatibility; Deprecated.
    OrganizationsFactory.deployed_address = "0xb6fdb9d326e8d9ef31457046b58637273ebdc683";
  }

  OrganizationsFactory.generated_with = "1.0.2";
  OrganizationsFactory.contract_name = "OrganizationsFactory";

  return OrganizationsFactory;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.OrganizationsFactory = factory;
}