"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Organization = (function (_Pudding) {
    _inherits(Organization, _Pudding);

    function Organization() {
      _classCallCheck(this, Organization);

      _get(Object.getPrototypeOf(Organization.prototype), "constructor", this).apply(this, arguments);
    }

    return Organization;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Organization.abi = [{ "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "proposals", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "members", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "propResults", "outputs": [{ "name": "", "type": "int256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "fakeTime", "type": "uint256" }], "name": "toTime", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "member", "type": "address" }], "name": "removeMember", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "base_tokens", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "propName", "type": "string" }, { "name": "propDescription", "type": "string" }, { "name": "startTime", "type": "uint256" }, { "name": "endTime", "type": "uint256" }], "name": "makeProposal", "outputs": [{ "name": "propAddress", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [], "name": "token_count", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "balances", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "minNotice", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "numProposals", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "Now", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "numMembers", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "organizer", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "vote", "type": "bool" }, { "name": "weight", "type": "uint256" }, { "name": "proposal", "type": "address" }], "name": "vote", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "amount", "type": "uint256" }, { "name": "dest", "type": "address" }], "name": "giveTokens", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "destroy", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "proposal", "type": "address" }], "name": "dispatchBalance", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "newMember", "type": "address" }], "name": "addMember", "outputs": [], "type": "function" }, { "inputs": [], "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_new", "type": "address" }], "name": "NewMember", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_old", "type": "address" }], "name": "DeletedMember", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "amount", "type": "uint256" }], "name": "Dispatch", "type": "event" }];
  Organization.binary = "6060604052606460065560008054600160a060020a031916331781556005819055600455610e78806100316000396000f3606060405236156100e55760e060020a6000350463013cf08b81146100e757806308ae4b0c1461012d57806308d103f7146101485780630909d4d5146101605780630b1ca49a1461016f5780631cdc044b146101b757806322e5c94f146101c057806323b161ab1461026857806327e235e3146102715780632d87017c14610289578063400e39491461029257806344d4fd191461029b5780634698d110146102a457806361203265146102ad57806361ebccfd146102bf578063790b7133146102f257806383197ef014610324578063c34c356f1461034d578063ca6d56dc1461049f575b005b6104c160043560098054829081101561000257506000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154600160a060020a031681565b6104de60043560016020526000908152604090205460ff1681565b6104de60043560036020526000908152604090205481565b6100e5600435600a8190555b50565b6100e5600435600054600160a060020a03908116339091161415806101ad5750600160a060020a03811660009081526001602052604090205460ff16155b156106d65761016c565b6104de60065481565b6040805160206004803580820135601f81018490048402850184019095528484526104c1949193602493909291840191908190840183828082843750506040805160208835808b0135601f8101839004830284018301909452838352979998604498929750919091019450909250829150840183828082843750949650509335935050606435915050600080548190600160a060020a03908116339091161461054d57610544565b6104de60055481565b6104de60043560026020526000908152604090205481565b6104de60085481565b6104de60075481565b6104de600a5481565b6104de60045481565b6104c1600054600160a060020a031681565b6100e560043560243560443533600160a060020a031660009081526001602052604081205460ff16151561071857610894565b6100e56004356024355b6005805483019055600160a060020a0316600090815260026020526040902080549091019055565b6100e5600054600160a060020a0390811633909116141561089f57600054600160a060020a0316ff5b6100e56004358060005b81600160a060020a031663bfcddbbc6040518160e060020a0281526004018090506020604051808303816000876161da5a03f1156100025750506040515160ff83161015905061089a5781600160a060020a031663bfcddbbc6040518160e060020a0281526004018090506020604051808303816000876161da5a03f115610002575050506040518051906020015082600160a060020a0316633d79d1c86040518160e060020a0281526004018090506020604051808303816000876161da5a03f1156100025750505060405180519060200150046002600050600084600160a060020a0316638fbb38ff856040518260e060020a028152600401808260ff1681526020019150506020604051808303816000876161da5a03f1156100025750506040805151600160a060020a03168352602093909352502080549091019055600101610357565b6100e5600435600054600160a060020a0390811633909116146106935761016c565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b5050506000928352506020808320909101805473ffffffffffffffffffffffffffffffffffffffff191684179055600160a060020a0383168252600390526040902060001990556007805460010190559050805b50949350505050565b600854600a540184101561056057610544565b858585856040516105d7806108a18339018080602001806020018581526020018481526020018381038352878181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156105de5780820380516001836020036101000a031916815260200191505b508381038252868181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156106375780820380516001836020036101000a031916815260200191505b509650505050505050604051809103906000f09050600960005080548060010182818154818355818115116104f0578183600052602060002091820191016104f091905b8082111561068f576000815560010161067b565b5090565b600160a060020a0381166000908152600160208181526040808420805460ff191684179055600480549093019092556002905281205560065461016c90826102fc565b600160a060020a03166000908152600160209081526040808320805460ff19169055600480546000190190556002909152812080546005805491909103905555565b33600160a060020a0316600090815260026020526040902054600190101561073f57610894565b600183101561074d57610894565b33600160a060020a0316600090815260026020526040902054838002111561077457610894565b81905080600160a060020a03166378e979256040518160e060020a0281526004018090506020604051808303816000876161da5a03f11561000257505060405151600a541080159150610807575080600160a060020a0316633197cbb66040518160e060020a0281526004018090506020604051808303816000876161da5a03f11561000257505060405151600a541090505b156108945733600160a060020a0390811660008181526002602052604080822080548880029003905580517f61ebccfd0000000000000000000000000000000000000000000000000000000081526004810189905260248101889052604481019390935251928416926361ebccfd926064818101939291829003018183876161da5a03f115610002575050505b50505050565b505050565b56606060405242600a600050556040516105d73803806105d783398101604052805160805160a05160c05192840193919091019160008054600160a060020a031916331781558451600280549281905291602060018216156101000260001901909116839004601f9081018290047f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90810193929091908901908390106100dc57805160ff19168380011785555b5061010c9291505b8082111561018f57600081556001016100b4565b505050505050610414806101c36000396000f35b828001600101855582156100ac579182015b828111156100ac5782518260005055916020019190600101906100ee565b505060038290556004819055825160018054600082905290916020600283851615610100026000190190931692909204601f9081018390047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081019390919088019083901061019357805160ff19168380011785555b506100c89291506100b4565b5090565b82800160010185558215610183579182015b828111156101835782518260005055916020019190600101906101a556606060405236156100b95760e060020a600035046302d05d3f81146100bb57806306fdde03146100cd5780630909d4d5146101275780632b57f777146101325780633197cbb61461014a5780633d79d1c81461015357806361ebccfd1461015c5780637284e4161461018457806378e97925146101df57806383197ef0146101e85780638fbb38ff1461021057806394f0873d14610256578063bd108fd41461026e578063bfcddbbc14610277578063d6b225be14610280575b005b610289600054600160a060020a031681565b61029c60028054602060018216156101000260001901909116829004601f8101829004909102608090810160405260608281529291908282801561033f5780601f106103145761010080835404028352916020019161033f565b600435600a556100b9565b61030a600454600a546000919010156104065761040f565b61030a60045481565b61030a60085481565b6100b960043560243560443560005433600160a060020a03908116911614610347575b505050565b61029c600180546020601f60026000198486161561010002019093169290920491820181900402608090810160405260608281529291908282801561033f5780601f106103145761010080835404028352916020019161033f565b61030a60035481565b6100b960005433600160a060020a039081169116141561041257600054600160a060020a0316ff5b61028960043560058054829081101561000257506000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154600160a060020a031681565b61030a600454600a546000919010156103e25761040f565b61030a60065481565b61030a60095481565b61030a60075481565b600160a060020a03166060908152602090f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156102fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060908152602090f35b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b505050505081565b600580546001810180835582818380158290116103875781836000526020600020918201910161038791905b808211156103de5760008155600101610373565b50505091909060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff1916831790555060088054838002019055600980546001019055821561017f57600680548301905561017f565b5090565b60075460065411156103f65750600161040f565b6007546006541161040f5761040f565b50600754600654035b90565b56";

  if ("0xc305c901078781c232a2a521c2af7980f8385ee9" != "") {
    Organization.address = "0xc305c901078781c232a2a521c2af7980f8385ee9";

    // Backward compatibility; Deprecated.
    Organization.deployed_address = "0xc305c901078781c232a2a521c2af7980f8385ee9";
  }

  Organization.generated_with = "1.0.2";
  Organization.contract_name = "Organization";

  return Organization;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Organization = factory;
}