{"changed":false,"filter":false,"title":"QuadraticVoting.sol","tooltip":"/dapp/contracts/QuadraticVoting.sol","value":"//Quadractic\ncontract QuadracticVoting{\n\tfunction QuadraticVoting(){\n\t}\n\n//Define the basic data Structures\n\tstruct Voter{\n\t\tuint voteCount;\n\t\tbool yesOrNo;\n\t}\n\tstruct Member{\n\t\tuint[] permisions;\n\t}\n\tstruct Proposal {\n\t\tbytes32 name;\n\t\tbytes32 description;\n\t\taddress contractID;\n\t\tuint yesVotes;\n\t\tuint noVotes;\n\t\tuint money;\n\t\tuint startDate;\n\t\tuint endDate;\n\t\tmapping (address => Voter) voters;\n\t}\n\tstruct Organization{\n\t\tbytes32 name;\n\t\tuint voteCost;\n\t\tmapping (address => Member) members;\n\t\tmapping (uint => Proposal) proposals;\n\t}\n    \n    mapping (bytes32 => Organization) public organizations;\n    \n//Register an organization, and give the registering account admin access.\n\tfunction registerOrganization(bytes32 name, uint voteCost){\n\t    address administrator;\n\t    bytes32 organizationHash;\n\t\torganizationHash = sha256(name, msg.sender);\n\t\tOrganization o = organizations[organizationHash];\n\t\to.name = name;\n\t\to.voteCost = voteCost;\n\t}\n\tfunction voteBuyer(){\n\t}\n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":11,"column":19},"end":{"row":11,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1449086194979}